from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from utils import safe_edit_message

router = Router()

# –ò–º–ø–æ—Ä—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –∏–º–µ–Ω–µ–º
from keyboards.main_menu import main_menu

# –ö–Ω–æ–ø–∫–∏ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ FAQ (—Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫)
faq_kb = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="üí∏ –°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –±–æ—Ç?", callback_data="faq_price")],
        [InlineKeyboardButton(text="‚è≥ –ó–∞ —Å–∫–æ–ª—å–∫–æ —Å–¥–µ–ª–∞–µ—Ç–µ?", callback_data="faq_time")],
        [InlineKeyboardButton(text="üõ† –ö–∞–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ?", callback_data="faq_technologies")],
        [InlineKeyboardButton(text="üîë –ú–æ–∂–µ—Ç–µ –ª–∏ —Å–¥–µ–ª–∞—Ç—å –ø–æ–¥ –∫–ª—é—á?", callback_data="faq_full_service")],
        [InlineKeyboardButton(text="üè¢ –†–∞–±–æ—Ç–∞–µ—Ç–µ —Å —é—Ä. –ª–∏—Ü–∞–º–∏?", callback_data="faq_corporate")],
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="to_main")]
    ]
)


# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ FAQ
@router.callback_query(F.data == "faq")
async def show_faq_menu(query: CallbackQuery):
    text = "üìå <b>–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã:</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:"
    await safe_edit_message(query.message, text=text, reply_markup=faq_kb, parse_mode="HTML")
    await query.answer()


# –û—Ç–≤–µ—Ç: —Å—Ç–æ–∏–º–æ—Å—Ç—å
@router.callback_query(F.data == "faq_price")
async def faq_price(query: CallbackQuery):
    text = (
        "<b>üí∏ –°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –±–æ—Ç?</b>\n\n"
        "–ë–∞–∑–æ–≤—ã–µ –±–æ—Ç—ã –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è –æ—Ç 10 000 ‚ÇΩ.\n"
        "–ü—Ä–æ–µ–∫—Ç—ã —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è–º–∏ –∏ AI ‚Äî –æ—Ç 25 000 –¥–æ 50 000 ‚ÇΩ.\n"
        "–¢–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∑–∞–¥–∞—á ‚Äî —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –Ω—É–∂–Ω–æ, –∏ –º—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ."
    )
    await safe_edit_message(query.message, text=text, reply_markup=faq_kb, parse_mode="HTML")
    await query.answer()


# –û—Ç–≤–µ—Ç: —Å—Ä–æ–∫–∏
@router.callback_query(F.data == "faq_time")
async def faq_time(query: CallbackQuery):
    text = (
        "<b>‚è≥ –ó–∞ —Å–∫–æ–ª—å–∫–æ —Å–¥–µ–ª–∞–µ—Ç–µ?</b>\n\n"
        "–í —Å—Ä–µ–¥–Ω–µ–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–Ω–∏–º–∞–µ—Ç –æ—Ç 2 –¥–æ 7 –¥–Ω–µ–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç–∏.\n"
        "–î–ª—è —Å—Ä–æ—á–Ω—ã—Ö –∑–∞–¥–∞—á –æ–±—Å—É–∂–¥–∞–µ–º —Å—Ä–æ–∫–∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ."
    )
    await safe_edit_message(query.message, text=text, reply_markup=faq_kb, parse_mode="HTML")
    await query.answer()


# –û—Ç–≤–µ—Ç: —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
@router.callback_query(F.data == "faq_technologies")
async def faq_technologies(query: CallbackQuery):
    text = (
        "<b>üõ† –ö–∞–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ?</b>\n\n"
        "–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º —Å Telegram, WhatsApp, CRM-—Å–∏—Å—Ç–µ–º–∞–º–∏, —Å–∞–π—Ç–∞–º–∏, –∞ —Ç–∞–∫–∂–µ –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ–º AI-—Å–µ—Ä–≤–∏—Å—ã:\n"
        "- ChatGPT API\n"
        "- Dialogflow\n"
        "- –î—Ä—É–≥–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –ø–æ–¥ –≤–∞—à–∏ –∑–∞–¥–∞—á–∏."
    )
    await safe_edit_message(query.message, text=text, reply_markup=faq_kb, parse_mode="HTML")
    await query.answer()


# –û—Ç–≤–µ—Ç: –ø–æ–¥ –∫–ª—é—á
@router.callback_query(F.data == "faq_full_service")
async def faq_full_service(query: CallbackQuery):
    text = (
        "<b>üîë –ú–æ–∂–µ—Ç–µ –ª–∏ —Å–¥–µ–ª–∞—Ç—å –ø–æ–¥ –∫–ª—é—á?</b>\n\n"
        "–î–∞, –º—ã –º–æ–∂–µ–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å –±–æ—Ç–∞ –ø–æ–¥ –∫–ª—é—á ‚Äî –æ—Ç –∏–¥–µ–∏ –∏ –¥–∏–∑–∞–π–Ω–∞ –¥–æ –ø–æ–ª–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∏ –∑–∞–ø—É—Å–∫–∞."
    )
    await safe_edit_message(query.message, text=text, reply_markup=faq_kb, parse_mode="HTML")
    await query.answer()


# –û—Ç–≤–µ—Ç: —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –ª–∏—Ü–∞
@router.callback_query(F.data == "faq_corporate")
async def faq_corporate(query: CallbackQuery):
    text = (
        "<b>üè¢ –†–∞–±–æ—Ç–∞–µ—Ç–µ —Å —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–º–∏ –ª–∏—Ü–∞–º–∏?</b>\n\n"
        "–î–∞, –º—ã —Å–æ—Ç—Ä—É–¥–Ω–∏—á–∞–µ–º –∫–∞–∫ —Å —Ñ–∏–∑–∏—á–µ—Å–∫–∏–º–∏, —Ç–∞–∫ –∏ —Å —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–º–∏ –ª–∏—Ü–∞–º–∏.\n"
        "–í–æ–∑–º–æ–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞ –ø–æ –¥–æ–≥–æ–≤–æ—Ä–∞–º –∏ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç–æ–≤."
    )
    await safe_edit_message(query.message, text=text, reply_markup=faq_kb, parse_mode="HTML")
    await query.answer()


# –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@router.callback_query(F.data == "to_main")
async def back_to_main(query: CallbackQuery):
    await safe_edit_message(query.message, text="–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é üëá", reply_markup=main_menu)
    await query.answer()
